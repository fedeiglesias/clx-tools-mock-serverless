openapi: 3.0.2
info:
  title: NHUB Router messaging API
  description: |-
    CREALOGIX Digital Banking Hub: Notification HUB messaging API

    This API provides capability  for sending notification (e.g. push alerts, smart alerts) through communication channels (like mobile push, timeline) to user contracts, based on their profiles & preferences.
    # **Introduction**
    See [the NHUB Module Confluence space](https://collaborate.crealogix.com/confluence/display/NH/Notification+Hub) for the module specification and documentation.

    ## __Change List__
    <table>
      <tr>
        <th>Version</th>
        <th>Area</th>
        <th>Description</th>
        <th>Author</th>
        <th>Date</th>
      </tr>
      <tr>
        <td>1.0.0</td>
        <td>notification</td>
        <td>Initial API definition</td>
        <td>DBH Push Team</td>
        <td>23.04.2020</td>
      </tr>
    </table>

    # Details #
    See the CREALOGIX [API concepts document](https://docu.ebs.crealogix.net/public-api-concepts/html/api-concepts.html) for general information about API design, naming conventions, paging, sorting, ...
  contact:
    name: Server-side surfers
    email: TBD-TTDBHPUSH@crealogix.com
  license:
    name: CREALOGIX
  version: 1.0.0
servers:
  - url: "{schema}://{host}:{port}/{businessDomain}/{apiType}/v{apiMajorVersion}/{tenantId}"
    variables:
      schema:
        default: https
        enum:
          - https
          - http
      host:
        default: api.crealogix.com
      port:
        default: "443"
      businessDomain:
        description: The business domain
        default: nhub
      tenantId:
        description:
          The unique identifier of the tenant. This value is defined on the
          OAuth server
        default: mybank
      apiMajorVersion:
        description: The API major version number
        default: "1"
      apiType:
        description: -> The api type can be user, service (/api/) or admin (/admin-api/)
        default: api
tags:
  - name: Messaging
    description: Notification messaging endpoints
paths:
  /notifications:
    post:
      tags:
        - Messaging
      summary: Sending notification.
      description:
        "Register a new notification which should be sent to users through
        defined notification channels. Notification is processed asynchronously. When
        message is registered succesfully operation will return notification UUID.
        This UUID can be used to tracking the delivery status of the notification.
        When new notification is registered successfully operation will return HTTP
        202. X-Correlation-Id HTTP Header can be can be applied to assure the idempotence
        of the request. When X-Correlation-Id is used and notification is already
        registered for this request, opertion will return HTTP 200. The notification
        massage will be not translated to language of the user preferred language,
        its a sender responsibility to deliver message content in correct language. "
      operationId: registerNotification.
      parameters:
        - name: X-Correlation-Id
          in: header
          description:
            An optional, client side generated end-to-end id that is tracked
            in logging requests on the server.
          required: false
          schema:
            type: string
        - name: Accept-Language
          in: header
          description:
            An optional, language tag (which is sometimes referred to as
            a "locale identifier"). This consists of a 2-3 letter base language tag
            representing the language, optionally followed by additional subtags separated
            by '-'. The most common extra information is the country or region variant
            (like 'en-US' or 'fr-CA') or the type of alphabet to use (like 'sr-Latn').
            If the language tag is not specified, the language defined in access token
            will be used.
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/NotificationRegistration"
      responses:
        "200":
          description: Response for  notification registration request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRegistrationResponse"
              examples:
                HTTP-202:
                  $ref: "#/components/examples/ExampleNotificationRegistrationResponse202"
                HTTP-200:
                  $ref: "#/components/examples/ExampleNotificationRegistrationResponse200"
        "202":
          description: Response for  notification registration request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRegistrationResponse"
              examples:
                HTTP-202:
                  $ref: "#/components/examples/ExampleNotificationRegistrationResponse202"
                HTTP-200:
                  $ref: "#/components/examples/ExampleNotificationRegistrationResponse200"
        "400":
          description:
            The server cannot or will not process the request due to something
            that is perceived to be a client error (e.g. malformed request syntax).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "401":
          description:
            The user is not authenticated or the access token is missing
            or is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "403":
          description:
            The 202 user is authenticated, but is not allowed to access
            the requested resource based on business permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "422":
          description:
            The request is well-formed but cannot be processed due to semantical
            errors. The response body contains further information (see the ResponseStatus
            definition for details).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - ClxApiOAuth2:
            - https://api.crealogix.com/nhub/messages
  /notifications/{notificationId}/state:
    get:
      tags:
        - Messaging
      summary: Notification delivery status tracking.
      description:
        Operation return the information about general state of the notification
        including states in notification channels.
      operationId: getStateByNotificationId
      parameters:
        - name: notificationId
          in: path
          description: uuid of the notification resource
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/NotificationIdType"
        - name: Accept-Language
          in: header
          description:
            An optional, language tag (which is sometimes referred to as
            a "locale identifier"). This consists of a 2-3 letter base language tag
            representing the language, optionally followed by additional subtags separated
            by '-'. The most common extra information is the country or region variant
            (like 'en-US' or 'fr-CA') or the type of alphabet to use (like 'sr-Latn').
            If the language tag is not specified, the language defined in access token
            will be used.
          required: false
          schema:
            type: string
        - name: X-Correlation-Id
          in: header
          description:
            An optional, client side generated end-to-end id that is tracked
            in logging requests on the server.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Response for notification status request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationStatusResponse"
        "400":
          description:
            The server cannot or will not process the request due to something
            that is perceived to be a client error (e.g. malformed request syntax).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "401":
          description:
            The user is not authenticated or the access token is missing
            or is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "403":
          description:
            The 202 user is authenticated, but is not allowed to access
            the requested resource based on business permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "404":
          description:
            No resource at the requested URI. This status indicates the
            server does not expose any resources at the supplied URI. It is never
            used as an indication that a search operation did not find any matches.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - ClxApiOAuth2:
            - https://api.crealogix.com/nhub/messages#read
            - https://api.crealogix.com/nhub/messages
  /notifications/{notificationId}/recipients/state:
    post:
      tags:
        - Messaging
      summary: Recipient notification delivery status tracking.
      description:
        Operation return the information about state of messages for each
        recipient. Use 'page & size' attributes to retrieve next portion of data.
      operationId: getRecipientsStateById
      parameters:
        - name: notificationId
          in: path
          description: uuid of the notification resource
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/NotificationIdType"
        - name: Accept-Language
          in: header
          description:
            An optional, language tag (which is sometimes referred to as
            a "locale identifier"). This consists of a 2-3 letter base language tag
            representing the language, optionally followed by additional subtags separated
            by '-'. The most common extra information is the country or region variant
            (like 'en-US' or 'fr-CA') or the type of alphabet to use (like 'sr-Latn').
            If the language tag is not specified, the language defined in access token
            will be used.
          required: false
          schema:
            type: string
        - name: X-Correlation-Id
          in: header
          description:
            An optional, client side generated end-to-end id that is tracked
            in logging requests on the server.
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RecipientsState"
      responses:
        "200":
          description: |
            Response for recipients status request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientsStatusResponse"
        "400":
          description:
            The server cannot or will not process the request due to something
            that is perceived to be a client error (e.g. malformed request syntax).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "401":
          description:
            The user is not authenticated or the access token is missing
            or is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        "403":
          description:
            The 202 user is authenticated, but is not allowed to access
            the requested resource based on business permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - ClxApiOAuth2:
            - https://api.crealogix.com/nhub/messages#read
            - https://api.crealogix.com/nhub/messages
components:
  schemas:
    ChannelRecipientDeliveryInfo:
      required:
        - channelKey
        - channelRecipientId
        - state
        - userId
      type: object
      properties:
        userId:
          $ref: "#/components/schemas/UserIdType"
        channelKey:
          $ref: "#/components/schemas/ChannelType"
        recipientType:
          $ref: "#/components/schemas/ChannelRecipientType"
        recipientId:
          $ref: "#/components/schemas/ChannelRecipientIdType"
        state:
          $ref: "#/components/schemas/ChannelRecipientDeliveryStateType"
        stateTimestamp:
          type: string
          description: Time when current state has be refreshed
          format: date-time
        errorCause:
          type: string
          description: Error description for investigation purposes
      description: -> Status of the notification in the channel
    NotificationRegistrationRequest:
      required:
        - notification
        - recipients
      type: object
      properties:
        recipients:
          $ref: "#/components/schemas/NotificationRecipients"
        notification:
          $ref: "#/components/schemas/Notification"
      description: Notification registration request
    NotificationRegistrationResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseStatus"
        - type: object
          properties:
            notificationId:
              $ref: "#/components/schemas/NotificationIdType"
          description: Unique id of the notification resource.
    NotificationStatusResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseStatus"
        - required:
            - channels
            - notification
          type: object
          properties:
            notification:
              $ref: "#/components/schemas/NotificationStatus"
            channels:
              maxItems: 2
              minItems: 0
              type: array
              items:
                $ref: "#/components/schemas/ChannelNotificationStatus"
          description: Notification status response payload
    RecipientsStatusResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseStatus"
        - type: object
          properties:
            pageResponse:
              $ref: "#/components/schemas/PageResponse"
            recipients:
              maxItems: 999
              minItems: 0
              type: array
              items:
                $ref: "#/components/schemas/ChannelRecipientDeliveryInfo"
          description: Recipients status response payload
    ResponseStatus:
      required:
        - _status
        - _timestamp
      type: object
      properties:
        _status:
          type: boolean
          description:
            Indicates the success of failure of request processing. Helpful
            for early processing by the API clients
          example: true
        _messages:
          type: array
          description: The list of status messages
          items:
            $ref: "#/components/schemas/ResponseMessage"
        _timestamp:
          type: string
          description:
            The response timestamp. The timestamp may be reported in a
            client UI message when instructing the user to contact the call center,
            so that it can be used when reporting issues, e.g. for correlating the
            issue a user experienced with the corresponding application log entries
          format: date-time
      description: The generic status-object for responses
    ResponseMessage:
      required:
        - category
        - code
        - text
      type: object
      properties:
        category:
          $ref: "#/components/schemas/MessageCategory"
        code:
          type: string
          description:
            A technical code describing the message content and the semantics
            of the additional params
          example: TRANSACTION_ACCEPTED
        data:
          type: string
          description:
            The additional data field for complex objects or binary data,
            should be returned as base64. This field is deprecated and will be removed
            in the future. New APIs should use params.data instead
        params:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: 2019-01-12T11:34:56Z
          description:
            The additional data fields for complex objects or base64-encoded
            binary data. The supported fields and their interpretation depends on
            the technical message code describing the message content
        path:
          type: string
          description:
            The JSON path in case of field validation. If not set, the
            message is a global response message. If this field is set, the text contains
            a field-specific message. The elements of the JSON structure are separated
            by dots (.) and arrays are represented with square brackets ([]).
          example: creditor.name
        text:
          type: string
          description: The message in user’s language
          example: Order has been processed.
      description: Common response message object.
    MessageCategory:
      type: string
      description:
        The category describing the severity of the message. The SUCCESS
        and NORMAL values are deprecated. New APIs should use INFO instead and set
        ResponseStatus._status = true to indicate the success
      enum:
        - NORMAL
        - INFO
        - SUCCESS
        - ERROR
        - WARN
    NotificationIdType:
      type: string
      description: Represents type of notification id resource.
      format: uuid
    SearchRequest:
      type: object
      properties:
        filter:
          type: array
          description: Specifies the filters for individual properties
          items:
            $ref: "#/components/schemas/PropertyFilter"
        page:
          $ref: "#/components/schemas/PageRequest"
        sort:
          type: array
          description:
            Specifies by which properties and direction (ASC,DESC) the
            information should be sorted.
          items:
            $ref: "#/components/schemas/PropertySortOrder"
      description: Every search has page, sort and filter
    PropertyFilter:
      required:
        - filter
        - name
      type: object
      properties:
        filter:
          type: object
          description:
            The filter which can be applied to the type of the property
            like AmountFilter, DateRangeFilter, DateTimeRangeFilter etc.
        name:
          type: string
          description: Name of the property. May contain . for nested properties
          example: person.name, person.address.street
      description: Filter for any property
    PageRequest:
      type: object
      properties:
        page:
          type: integer
          description: The zero based number of the page to return
          format: int32
        size:
          type: integer
          description: The number of items to return in a page
          format: int32
      description: The meta data describing a request for paginated resource.
    PropertySortOrder:
      type: object
      properties:
        direction:
          $ref: "#/components/schemas/SortDirection"
        name:
          type: string
          description: Name of the property
      description:
        Specifies which property should be used in the sorting. ASC direction
        is used if none is specified.
    SortDirection:
      type: string
      description: Specifies which direction should be used in the sorting
      enum:
        - ASC
        - DESC
    UserIdType:
      maxLength: 50
      minLength: 1
      type: string
      description: Represents type of user id resource
    ChannelType:
      type: string
      description: "Represents notification channel type  "
      enum:
        - PUSH
        - TIMELINE
    ChannelRecipientType:
      type: string
      description:
        "Represents type of recipient used as recipient id\n  * `DEVICE_ID`\
        \ - device id is used as recipient id\n  * `USER_ID`- user id is used as recipient\
        \ id \n  * `UNKNOWN`- Unknown recipient id. Used when it was not possible\
        \ to determine recipient identifier for a channel."
      enum:
        - DEVICE_ID
        - USER_ID
        - UNKNOWN
    ChannelRecipientIdType:
      maxLength: 50
      minLength: 1
      type: string
      description: Represents type of channel recipient id
    ChannelRecipientDeliveryStateType:
      type: string
      description:
        "Channel recipient delivery state - represent the status of the\
        \ delivery of for each channel recipient\n  * `NO_RECIPIENT_ID` - The notification\
        \ has been not sent due to missing recipient identifier for a channel. \n\
        \  * `QUEUED` - The notification has been queued.\n  * `SENT` - The notification\
        \ has been sent or ready to pickup by user.\n  * `DELIVERED` - The notification\
        \ has been delivered to user.\n  * `READ` - The notification has been read\
        \ by user.\n  * `EXPIRED` - The notification has been expired before delivery/send.\n\
        \  * `DELETED` - The notification has been deleted by user.\n  * `ERORR` -\
        \ The notification has been not sent/delivered to user.  "
      enum:
        - NO_RECIPIENT_ID
        - QUEUED
        - SENT
        - DELIVERED
        - READ
        - EXPIRED
        - DELETED
        - ERORR
    NotificationRecipients:
      type: object
      properties:
        users:
          maxItems: 999
          minItems: 1
          type: array
          description: List of the users ids to which the message should be sent
          items:
            $ref: "#/components/schemas/UserId"
      description: Notification recipients
    UserId:
      type: object
      properties:
        userId:
          $ref: "#/components/schemas/UserIdType"
      description: Unique id of the user resource.
    Notification:
      required:
        - content
      type: object
      properties:
        properties:
          $ref: "#/components/schemas/NotificationProperties"
        content:
          $ref: "#/components/schemas/NotificationContent"
      description: Notification message which should be sent.
    NotificationProperties:
      type: object
      properties:
        category:
          maxLength: 25
          minLength: 1
          type: string
          description: 'Used to group notifications for example "Account Balance" '
          nullable: true
        expirationDate:
          type: string
          description:
            Data time of the message expirationDate. The largest value
            is 30 Days from now. Empty value means that maximal 30 days value will
            be used.
          format: date-time
      description: Notification properties
    NotificationContent:
      required:
        - body
        - title
      type: object
      properties:
        title:
          maxLength: 50
          minLength: 1
          type: string
          description: The notification title
        body:
          maxLength: 450
          minLength: 1
          type: string
          description: The notification body text
        data:
          maxItems: 15
          minItems: 0
          type: array
          description: Arbitrary key/value payload dynamic binding data
          items:
            $ref: "#/components/schemas/DataItem"
      description: Notification content
    DataItem:
      required:
        - key
        - value
      type: object
      properties:
        key:
          maxLength: 25
          minLength: 1
          type: string
          description: key item of a map
        value:
          maxLength: 250
          minLength: 1
          type: string
          description: value item of a map
      description:
        Arbitrary key/value payload This key/value pair can be used e.g.
        for deeplinks or merging within body placeholders.
    NotificationStatus:
      required:
        - expirationDate
        - notificationId
        - notificationState
        - registrationDate
      type: object
      properties:
        notificationId:
          $ref: "#/components/schemas/NotificationIdType"
        registrationDate:
          type: string
          description: Data time of the notification in UTC time zone
          format: date-time
        expirationDate:
          type: string
          description: Data time of the notification in UTC time zone
          format: date-time
        notificationState:
          $ref: "#/components/schemas/NotificationStateType"
        erorrCause:
          type: string
          description: Error description for investigation purposes
    NotificationStateType:
      type: string
      description:
        "Notification state - represent the status of the delivery of the\
        \ whole notification message or notification in the selected channel\n  *\
        \ `QUEUED` - The notification has been queued. Details about channel delivery\
        \ not available yet.\n  * `PROCESSING` - The notification is processing now.\
        \ Details about channel delivery can be not complete because of the work in\
        \ progress.\n  * `PROCESSED` - The notification have been processed successfully.\
        \ Detail about information about channel recipients are available.\n  * `NO_RECIPIENTS`\
        \ - No channel recipients found for specified recipients. Notification not\
        \ sent.\n  * `REJECTED` -  Notification can't be processed. Message was not\
        \ send to any channel\n  * `PROCESSED_WITH_WARNINGS` - Notification partially\
        \ has been sent, but for some channels recipients there is an error.  "
      enum:
        - QUEUED
        - PROCESSING
        - PROCESSED
        - PROCESSED_WITH_WARNINGS
        - NO_RECIPIENTS
        - REJECTED
    ChannelNotificationStatus:
      required:
        - channelKey
        - channelNotificationId
        - state
      type: object
      properties:
        channelKey:
          $ref: "#/components/schemas/ChannelType"
        channelNotificationId:
          $ref: "#/components/schemas/NotificationIdType"
        state:
          $ref: "#/components/schemas/NotificationStateType"
        stateTimestamp:
          type: string
          description: Time when current state has be refreshed
          format: date-time
        errorCause:
          type: string
          description: Error description for investigation purposes
      description: Status of the notification in the channel.
    PageResponse:
      type: object
      properties:
        number:
          type: integer
          description: The zero-based page number
          format: int32
        numberOfElements:
          type: integer
          description: The number of items in this page
          format: int32
        size:
          type: integer
          description: The page size, i.e. the number of items per page
          format: int32
        totalElements:
          type: integer
          description: The total number of available items
          format: int64
        totalPages:
          type: integer
          description: The total number of pages, based on size and totalElements
          format: int32
      description: The meta data describing the paginated resource
  responses:
    NotificationRegistrationResponse:
      description: Response for  notification registration request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationRegistrationResponse"
          examples:
            HTTP-202:
              $ref: "#/components/examples/ExampleNotificationRegistrationResponse202"
            HTTP-200:
              $ref: "#/components/examples/ExampleNotificationRegistrationResponse200"
    NotificationStatusResponse:
      description: Response for notification status request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationStatusResponse"
    RecipientsStatusResponse:
      description: |
        Response for recipients status request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RecipientsStatusResponse"
  examples:
    ExampleNotificationRegistrationResponse202:
      summary: Sample HTTP 202 response
      value:
        _status: true
        _messages:
          - category: INFO
            code: NOTIFICATION_ACCEPTED
            text: Notification has been registered
        _timestamp: 2020-04-25T13:26:54.100Z
        notificationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    ExampleNotificationRegistrationResponse200:
      summary: Sample HTTP 200 response
      value:
        _status: true
        _messages:
          - category: WARN
            code: DUPLICATED_REQUEST
            text: "Message already registered with this X-Correlation-Id: 12312312"
        _timestamp: 2020-04-25T13:26:54.100Z
        notificationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
  requestBodies:
    NotificationRegistration:
      description: Notification registration request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationRegistrationRequest"
      required: true
    RecipientsState:
      description:
        "RecipientsState notification search reques.\n Optional Filter\
        \ Fields \n * notification.channelKey  (PUSH|TIMELINE - value)\n * notification.userId\
        \  (value)\n \n Sort Fields\n * N/A"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchRequest"
      required: true
  securitySchemes:
    ClxApiOAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.crealogix.com/oauth2/token
          scopes:
            https://api.crealogix.com/nhub/messages#read:
              Read access to notification
              message.
            https://api.crealogix.com/nhub/messages:
              Read/write access to notification
              message.
